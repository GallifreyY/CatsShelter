scalar GraphQLDate

type Application {
  _id: ID!
  id: Int!
  name: String!
  number: String!
  gender: String
  email: String
  age: String
  occupation:String
  catsID:String!
}

type volunteerApplication {
  _id: ID!
  id: Int!
  name: String!
  number: String!
  gender: String
  email: String
  age: String
  location: String!
}

type Rescue {
  _id: ID!
  id: Int!
  city: String
  area: String
  avenue: String
  address: String
  name: String
  phoneNumber: String
}

type Marker {
  _id: ID!
  id: Int!
  lat: String
  lng: String
}

"Toned down Application, used as inputs, without server generated values."
input ApplicationInputs {
  name: String!
  number: String!
  gender: String
  email: String
  age: String
  occupation:String
  catsID:String!
}

input volunteerInputs {
  name: String!
  number: String!
  gender: String
  email: String
  age: String
  location: String!
}

input RescueInputs {
  city: String
  area: String
  avenue: String
  address: String
  name: String
  phoneNumber: String
}

input MarkerInputs {
  lat: String
  lng: String
}

##### Top level declarations

type Query {
  about: String!
  applicationList: [Application!]!
  markerList: [Marker!]!
}

type Mutation {
  setAboutMessage(message: String!): String
  applicationAdd(application: ApplicationInputs!): Application!
  volunteerAdd(application: volunteerInputs!): volunteerApplication!
  rescueAdd(rescue:RescueInputs!):Rescue!
  markerAdd(marker:MarkerInputs!):Marker!
  addToBlacklist(nameInput: String!): String
}
